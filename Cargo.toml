[package]
name = "stream_alerts"
version = "0.1.0"
edition = "2021"
rust-version = "1.58"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.6.18", features = [
    "tower-log",
    "http2",
    "ws",
], optional = true }
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
leptos = { version = "0.3", default-features = false, features = [
    "serde",
    "stable",
] }
leptos_axum = { version = "0.3", optional = true }
leptos_meta = { version = "0.3", default-features = false, features = [
    "stable",
] }
leptos_router = { version = "0.3", default-features = false, features = [
    "stable",
] }
log = "0.4"
simple_logger = "4"
tokio = { version = "1.28.1", features = [
    "rt-multi-thread",
    "macros",
    "parking_lot",
], optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4", features = [
    "fs",
    "trace",
    "catch-panic",
], optional = true }
wasm-bindgen = "=0.2.86"
thiserror = "1.0.40"
tracing = { version = "0.1.37" }
http = "0.2.9"

gloo = { version = "0.8.0", features = ["futures"] }
gloo-net = { version = "0.2.6", features = ["json", "http"] }

gloo-utils = { version = "0.1.6" }

getrandom = { version = "0.2", features = ["js"] }

clap = { version = "4.2", features = ["derive", "env"] }
color-eyre = { version = "0.6", features = ["capture-spantrace"] }
dotenvy = { version = "0.15.7", optional = true }
eyre = { version = "0.6" }
once_cell = { version = "1.17.1" }
tracing-error = "0.2.0"
tracing-log = "0.1.3"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
futures = { version = "0.3" }
askama = { version = "0.12", features = ["with-axum"] }
askama_axum = { version = "0.3" }
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1" }
tokio-tungstenite = { version = "0.18.0", optional = true }
hyper = { version = "0.14", optional = true }
nanoid = "0.4.0"
aliri_braid = "0.3.1"
forwarded-header-value = { version = "0.1.1", optional = true }
rand = { version = "0.8.5", features = ["min_const_gen"] }
comrak = { version = "0.18.0", default-features = false }
axum-login = { version = "0.5.0", optional = true }
cookie = { version = "0.17.0", optional = true }
scrypt = { version = "0.11.0", optional = true }
async-trait = { version = "0.1.68", optional = true }

[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = ["dep:async-trait", "dep:axum-login", "dep:axum", "dep:cookie", "dep:dotenvy", "dep:forwarded-header-value", "dep:hyper", "dep:leptos_axum", "dep:tokio-tungstenite", "dep:tokio", "dep:tower-http", "dep:tower", "dep:scrypt", "leptos_meta/ssr", "leptos_router/ssr", "leptos/ssr", "tower-http?/tracing"]


[build-dependencies]
built = { version = "0.6.0", features = ["chrono", "git2"] }


[profile.dev.package.backtrace]
opt-level = 3

[profile.dev.package.scrypt]
opt-level = 3

[package.metadata.cargo-all-features]
denylist = ["axum", "tokio", "tower", "tower-http", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "site"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
tailwind-input-file = "style/tailwind.css"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
