name: docker
on:
  push:
    branches: ['main']
    tags: ["v*"]
  pull_request:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: stream_alerts
  IMAGE_NAME_FQ: ${{ github.repository_owner }}/stream_alerts

jobs:
  bake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest
      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        # if main branch or tag
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FQ }}
          tags: |
            type=ref,event=branch,enable=false
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      - name: Build and push
        uses: docker/bake-action@v2
        with:
          push: ${{github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')}}
          files: |
            docker-bake.hcl
            ${{ steps.meta.outputs.bake-file}}
          set: |
            *.cache-from=type=registry,ref=ghcr.io/${{ env.IMAGE_NAME_FQ }}:edge
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
      # - name: Delete old images
      #   uses: snok/container-retention-policy@v1
      #   with:
      #     image-names: ${{ env.IMAGE_NAME}}
      #     cut-off: One day ago UTC
      #     keep-at-least: 2
      #     account-type: personal
      #     filter-tags: sha-*
      #     # token needs read:packages and delete:packages
      #     token: ${{ secrets.GH_TOKEN_DELETE }}